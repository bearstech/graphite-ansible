- name: Cairo
  apt: pkg=libcairo2-dev
- name: graphite source
  get_url: url=https://github.com/graphite-project/graphite-web/archive/{{ graphite.version }}.tar.gz dest=/opt/graphite/graphite-web-{{ graphite.version }}.tar.gz
- name: unarchive source
  command: tar -xvzf graphite-web-{{ graphite.version }}.tar.gz chdir=/opt/graphite creates=/opt/graphite/graphite-web-{{ graphite.version }}
- name: symlink webapp
  file: state=link src=/opt/graphite/graphite-web-{{ graphite.version }}/webapp dest=/opt/graphite/webapp
- name: install graphite
  command: ./bin/pip install -r ./graphite-web-{{ graphite.version }}/requirements.txt chdir=/opt/graphite
- name: graphite conf
  template: src=local_settings.py.j2 dest=/opt/graphite/graphite-web-{{graphite.version}}/webapp/graphite/local_settings.py
- name: default db
  command: /opt/graphite/bin/python manage.py syncdb --noinput chdir=/opt/graphite/webapp/graphite creates=/opt/graphite/storage/graphite.db
- name: graphite owns the db
  file: path=/opt/graphite/storage/graphite.db owner=graphite

- name: graphite storage folder
  file: state=directory path=/opt/graphite/storage owner=graphite recurse=yes

- name: gunicorn
  pip: name=gunicorn virtualenv=/opt/graphite
- name: graphite default
  template: src=graphite.j2 dest=/etc/default/graphite
  notify: restart graphite
- name: graphite init
  copy: src=graphite dest=/etc/init.d/graphite mode=0744
  notify: restart graphite
- name: init.d
  command: update-rc.d graphite defaults
- name: graphite service
  service: name=graphite state=started
